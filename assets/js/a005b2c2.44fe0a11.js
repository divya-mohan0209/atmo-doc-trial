"use strict";(self.webpackChunkatmo_trial_doc=self.webpackChunkatmo_trial_doc||[]).push([[8049],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,b=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(b,i(i({ref:t},s),{},{components:n})):r.createElement(b,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1890:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},u="Creating Runnables",c={unversionedId:"atmo/usage/creating-runnables",id:"atmo/usage/creating-runnables",isDocsHomePage:!1,title:"Creating Runnables",description:'{% hint style="info" %}',source:"@site/docs/atmo/usage/creating-runnables.md",sourceDirName:"atmo/usage",slug:"/atmo/usage/creating-runnables",permalink:"/atmo-doc-trial/docs/atmo/usage/creating-runnables",editUrl:"https://github.com/suborbital/docs/edit/master/atmo-trial-docs/docs/atmo/usage/creating-runnables.md",tags:[],version:"current",lastUpdatedAt:1638861026,formattedLastUpdatedAt:"12/7/2021",frontMatter:{},sidebar:"docs",previous:{title:"Modifying responses",permalink:"/atmo-doc-trial/docs/atmo/runnable-api/response"},next:{title:"Creating handlers",permalink:"/atmo-doc-trial/docs/atmo/usage/creating-handlers"}},s=[{value:"Create a Runnable",id:"create-a-runnable",children:[],level:2}],p={toc:s};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"creating-runnables"},"Creating Runnables"),(0,o.kt)("p",null,'{% hint style="info" %}\n',(0,o.kt)("strong",{parentName:"p"},"You'll need to install the subo CLI tool and Docker to use Atmo"),"."),(0,o.kt)("p",null,"To install the tool, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/suborbital/subo"},"visit the subo repository"),"."),(0,o.kt)("p",null,"Docker is used to build Runnables and run the Atmo development server.\n{% endhint %}"),(0,o.kt)("h2",{id:"create-a-runnable"},"Create a Runnable"),(0,o.kt)("p",null,"You can create a new Runnable with subo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"> subo create runnable myfunction\n")),(0,o.kt)("p",null,"By default, Rust will be used. To use Swift, pass ",(0,o.kt)("inlineCode",{parentName:"p"},"--lang"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"> subo create runnable myswiftfunction --lang=swift\n")),(0,o.kt)("p",null,"Each runnable has a ",(0,o.kt)("inlineCode",{parentName:"p"},".runnable.yaml")," that describes it. The name you provide to the ",(0,o.kt)("inlineCode",{parentName:"p"},"create runnable")," command is the name that will be used to call the Runnable in Directive handlers, which are discussed next."),(0,o.kt)("p",null,"Your Runnables will use the ",(0,o.kt)("a",{parentName:"p",href:"/atmo-doc-trial/docs/atmo/runnable-api/introduction"},"Runnable API")," to access resources such as the network, files, and more. Read more by clicking on the link or continuing through the guide."))}d.isMDXComponent=!0}}]);