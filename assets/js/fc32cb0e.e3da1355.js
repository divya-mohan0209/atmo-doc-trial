"use strict";(self.webpackChunkatmo_trial_doc=self.webpackChunkatmo_trial_doc||[]).push([[2015],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5352:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],c={},l="Creating a Project",p={unversionedId:"atmo/getstarted/creating-a-project",id:"atmo/getstarted/creating-a-project",isDocsHomePage:!1,title:"Creating a Project",description:"With subo installed, you can now create a project:",source:"@site/docs/atmo/getstarted/creating-a-project.md",sourceDirName:"atmo/getstarted",slug:"/atmo/getstarted/creating-a-project",permalink:"/atmo-doc-trial/docs/atmo/getstarted/creating-a-project",editUrl:"https://github.com/suborbital/docs/edit/master/atmo-trial-docs/docs/atmo/getstarted/creating-a-project.md",tags:[],version:"current",lastUpdatedAt:1638861026,formattedLastUpdatedAt:"12/7/2021",frontMatter:{},sidebar:"docs",previous:{title:"Get Started",permalink:"/atmo-doc-trial/docs/atmo/getstarted/README"},next:{title:"Building and Running",permalink:"/atmo-doc-trial/docs/atmo/getstarted/building-and-running"}},s=[{value:"Overview",id:"overview",children:[],level:3}],u={toc:s};function d(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"creating-a-project"},"Creating a Project"),(0,a.kt)("p",null,"With subo installed, you can now create a project:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"subo create project important-api\n")),(0,a.kt)("p",null,"The project contains two important things: a ",(0,a.kt)("inlineCode",{parentName:"p"},"Directive.yaml")," file, and an example Runnable called ",(0,a.kt)("inlineCode",{parentName:"p"},"helloworld")," written in Rust. The ",(0,a.kt)("a",{parentName:"p",href:"/atmo-doc-trial/docs/atmo/concepts/the-directive"},"Directive")," file defines route handlers and connects ",(0,a.kt)("a",{parentName:"p",href:"/atmo-doc-trial/docs/atmo/concepts/runnables"},"Runnables")," to them."),(0,a.kt)("h3",{id:"overview"},"Overview"),(0,a.kt)("p",null,"In the Directive file, you'll see a handler set up for you that serves the ",(0,a.kt)("inlineCode",{parentName:"p"},"POST /hello")," route using the ",(0,a.kt)("inlineCode",{parentName:"p"},"helloworld")," Runnable:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# the Directive is a complete description of your application, including all of its business logic.\n# appVersion should be updated for each new deployment of your app.\n# atmoVersion declares which version of Atmo is used for the `subo dev` command.\n\nidentifier: com.suborbital.important-api\nappVersion: v0.1.0\natmoVersion: v0.2.3\n\n\nhandlers:\n  - type: request\n    resource: /hello\n    method: POST\n    steps:\n      - fn: helloworld\n")))}d.isMDXComponent=!0}}]);